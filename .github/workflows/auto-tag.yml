name: Automated Tagging

on:
  push:
    branches:
      - main
      - dev

permissions:
  contents: write

jobs:
  create-tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Determine Branch and Tag Format
        id: branch_and_tag
        run: |
          BRANCH=$(echo "${{ github.ref_name }}")
          DATE=$(date +'%Y-%m-%d')
          if [[ "$BRANCH" == "main" ]]; then
            PREFIX="v"
          elif [[ "$BRANCH" == "dev" ]]; then
            PREFIX="b"
          else
            echo "Unsupported branch: $BRANCH"
            exit 1
          fi

          # Fetch all tags
          git fetch --tags

          # Get today's existing tags and find the highest number
          HIGHEST_TAG=$(git tag -l "${PREFIX}${DATE}.*" | sort -V | tail -n 1)
          
          if [[ -z "$HIGHEST_TAG" ]]; then
            VERSION_NUMBER=1
          else
            CURRENT_NUMBER=$(echo "$HIGHEST_TAG" | sed "s/.*\.//")
            VERSION_NUMBER=$((CURRENT_NUMBER + 1))
          fi

          TAG="${PREFIX}${DATE}.${VERSION_NUMBER}"
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Create and Push Tag
        env:
          TAG: ${{ steps.branch_and_tag.outputs.tag }}
        run: |
          echo "Creating tag: $TAG"
          # Check if tag exists before creating
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists, skipping tag creation"
            exit 0
          fi
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git tag $TAG
          git push origin $TAG
